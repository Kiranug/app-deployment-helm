name: Build, Push to ACR and Deploy to AKS

on:
  workflow_dispatch:
    inputs:
      resource_group:
        description: 'Select Resource Group'
        required: true
        default: 'rg-aks-free-tier'
        type: choice
        options:
          - rg-aks-free-tier
          - prod-rg
      aks_cluster:
        description: 'Select AKS Cluster Name'
        required: true
        default: 'aks-free-cluster'
        type: choice
        options:
          - aks-free-cluster
          - prod-aks

env:
  ACR_NAME: jubbuseacrinmh
  IMAGE_NAME: myecomapp
  KUBECONFIG_FILE: ${{ github.workspace }}/kubeconfig
  RESOURCE_GROUP: ${{ github.event.inputs.resource_group }}
  AKS_CLUSTER_NAME: ${{ github.event.inputs.aks_cluster }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Azure CLI
        uses: azure/setup-azure-cli@v1

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Login to ACR
        run: |
          az acr login --name $ACR_NAME

      - name: Build Docker Image
        run: |
          docker build -t $ACR_NAME.azurecr.io/$IMAGE_NAME:${{ github.sha }} .

      - name: Push Docker Image to ACR
        run: |
          docker push $ACR_NAME.azurecr.io/$IMAGE_NAME:${{ github.sha }}

      - name: Get AKS Credentials
        run: |
          az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER_NAME --file $KUBECONFIG_FILE

      - name: Replace Image Name in Deployment Manifest
        run: |
          sed -i 's|{{IMAGE_NAME}}|'"$ACR_NAME.azurecr.io/$IMAGE_NAME:${{ github.sha }}"'|g' manifests/deployment.yaml

      - name: Deploy to AKS
        run: |
          kubectl --kubeconfig=$KUBECONFIG_FILE apply -f manifests/deployment.yaml
          kubectl --kubeconfig=$KUBECONFIG_FILE apply -f manifests/service.yaml
          kubectl --kubeconfig=$KUBECONFIG_FILE apply -f manifests/ingress.yaml