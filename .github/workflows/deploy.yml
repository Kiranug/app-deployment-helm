name: Build, Push to ACR and Deploy to AKS

on:
  workflow_dispatch:
    inputs:
      resource_group:
        description: 'Select Resource Group'
        required: true
        default: 'rg-aks-free-tier'
        type: choice
        options:
          - rg-aks-free-tier
          - prod-rg
      aks_cluster:
        description: 'Select AKS Cluster Name'
        required: true
        default: 'aks-free-cluster'
        type: choice
        options:
          - aks-free-cluster
          - prod-aks

env:
  ACR_NAME: jubbuseacrinmh         # without .azurecr.io
  IMAGE_NAME: myecomapp
  IMAGE_TAG_FILE: image_name.txt   # file that stores image tag (created by docker build)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Azure Login via OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: ACR Login
      run: az acr login --name $ACR_NAME

    - name: Build and Push Docker Image
      run: |
        IMAGE_TAG=${{ github.sha }}
        docker build -t $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG .
        docker push $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG
        echo "$IMAGE_TAG" > $IMAGE_TAG_FILE

    - name: Log in to Azure with OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Get AKS Credentials
      run: |
        az aks get-credentials --resource-group "${{ github.event.inputs.resource_group }}" \
                               --name "${{ github.event.inputs.aks_cluster }}" \
                               --overwrite-existing

    - name: Deploy to AKS
      run: |
        IMAGE_TAG=$(cat $IMAGE_TAG_FILE)
        echo "Using image tag: $IMAGE_TAG"
        sed "s|REPLACE_IMAGE|$ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG|g" manifests/deployment.yaml | kubectl apply -f -
        kubectl apply -f manifests/service.yaml
        kubectl apply -f manifests/ingress.yaml